{"version":3,"sources":["component/Index.js","component/NewTitle.js","component/Logout.js","component/UserContext.js","component/Menubar.js","component/EditorTool.js","component/Editor.js","component/Description.js","component/Details.js","component/TitleNavbar.js","component/Input.js","component/SearchInput.js","component/Home.js","component/KnowledgeJunction.js","App.js","serviceWorker.js","index.js","component/api.js"],"names":["Index","props","className","alt","src","href","process","NewTitle","history","useHistory","useState","value","setValue","onClick","push","onSubmit","e","preventDefault","onTitle","type","onChange","target","required","placeholder","autoFocus","defaultProps","Logout","Api","logout","then","onLogout","UserContext","React","createContext","Menubar","user","useContext","to","picture","EditorTools","header","Header","marker","Marker","code","Code","delimiter","Delimiter","inlineCode","InlineCode","Editor","editorInstance","setEditorInstance","handleChange","a","save","newContent","autofocus","data","content","instanceRef","instance","tools","Description","blocks","description","map","element","index","key","ReactHtmlParser","text","link","defaultValue","cols","rows","Details","setContent","isEditable","setEditable","id","useParams","saveContent","console","log","useEffect","getContent","disabled","TitleNavbar","defaultTitle","setDefaultTitle","topics","length","titles","title","activeClassName","exact","path","Input","SearchInput","filteredTopics","setFilteredTopics","searchResults","filter","includes","block","some","Home","setTopics","handleTitle","addTitle","getTopics","KnowledgeJunction","setUser","updateLoginStatus","getUser","Provider","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","sendGetReq","url","fetch","res","json","sendPostReq","body","method","headers","JSON","stringify","response","module","exports"],"mappings":"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","file":"static/js/main.89cc6cd0.chunk.js","sourcesContent":["import React from 'react';\n\nconst Index = function (props) {\n  return (\n    <div>\n      <div className=\"container\">\n        <img alt=\"logo\" src=\"/images/logo.png\" className=\"logo-img\" />\n        <a\n          className=\"Oauth-link-container\"\n          href={`${process.env.REACT_APP_LOGIN}`}\n        >\n          <img\n            src=\"/images/google.png\"\n            alt=\"google-icon\"\n            className=\"google icon\"\n          />\n          <div className=\"Oauth-link\">Log in with Google</div>\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Index;\n","import React, {useState} from 'react';\nimport '../popup.css';\nimport {useHistory} from 'react-router-dom';\n\nconst NewTitle = function (props) {\n  const history = useHistory();\n  const [value, setValue] = useState(props.value);\n\n  const handleChange = (e) => setValue(e.target.value);\n\n  const handleSubmit = function (e) {\n    e.preventDefault();\n    if (value) {\n      props.onTitle(value);\n      setValue('');\n    }\n    history.push('/');\n  };\n\n  return (\n    <div className=\"overlay\">\n      <div className=\"popup\">\n        <div\n          className=\"close\"\n          onClick={() => {\n            history.push('/');\n          }}\n        >\n          X\n        </div>\n        <form onSubmit={handleSubmit}>\n          <input\n            className=\"input\"\n            type=\"text\"\n            value={value}\n            onChange={handleChange}\n            required\n            placeholder=\"Enter title here...\"\n            autoFocus\n          />\n          <br />\n          <button type=\"submit\">Add</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nNewTitle.defaultProps = {value: ''};\n\nexport default NewTitle;\n","import React from 'react';\nimport Api from './api';\n\nconst Logout = function (props) {\n  const logOut = function () {\n    Api.logout().then(() => {\n      props.onLogout();\n    });\n  };\n\n  return (\n    <div className=\"logout-link\" onClick={logOut}>\n      Logout\n    </div>\n  );\n};\n\nexport default Logout;\n","import React from 'react';\n\nconst UserContext = React.createContext('');\n\nexport default UserContext;\n","import React, {useContext} from 'react';\nimport Logout from './Logout';\nimport {NavLink} from 'react-router-dom';\nimport UserContext from './UserContext';\n\nconst Menubar = function (props) {\n  const user = useContext(UserContext);\n\n  return (\n    <div className=\"header\">\n      <img src=\"/images/logo-icon.png\" alt=\"logo\" className=\"logo-icon\" />\n      <div className=\"menu\">\n        <img src=\"/images/search.png\" className=\"add icon\" alt=\"add\" />\n        <NavLink to=\"/newTitle\">\n          <img src=\"/images/plus.png\" className=\"add icon\" alt=\"add\" />\n        </NavLink>\n        <img src={user.picture} alt=\"avatar\" className=\"avatar\" />\n        <div className=\"dropdown-links\">\n          <div className=\"links\">\n            <Logout onLogout={props.onLogout} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Menubar;\n","import Code from '@editorjs/code';\nimport Header from '@editorjs/header';\nimport Delimiter from '@editorjs/delimiter';\nimport Marker from '@editorjs/marker';\nimport InlineCode from '@editorjs/inline-code';\n\nconst EditorTools = {\n  header: Header,\n  marker: Marker,\n  code: Code,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n};\n\nexport default EditorTools;\n","import React, {useState} from 'react';\nimport EditorJs from 'react-editor-js';\nimport EditorTools from './EditorTool';\n\nconst Editor = function (props) {\n  const [editorInstance, setEditorInstance] = useState();\n\n  const handleChange = async function () {\n    const newContent = await editorInstance.save();\n    props.onChange(newContent);\n  };\n\n  return (\n    <div className=\"details\">\n      <EditorJs\n        autofocus=\"true\"\n        data={props.content}\n        instanceRef={(instance) => setEditorInstance(instance)}\n        onChange={handleChange}\n        tools={EditorTools}\n      />\n    </div>\n  );\n};\n\nexport default Editor;\n","import React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\n\nconst Description = function (props) {\n  let blocks = '';\n\n  if (props.description && props.description.blocks) {\n    blocks = props.description.blocks.map((element, index) => {\n      switch (element.type) {\n        case 'paragraph':\n          return (\n            <div key={index}>\n              <div>{ReactHtmlParser(element.data.text)}</div>\n              <br />\n            </div>\n          );\n\n        case 'header':\n          return <h2 key={index}>{element.data.text}</h2>;\n\n        case 'link':\n          return (\n            <a key={index} href={element.data.link}>\n              {element.data.link}\n            </a>\n          );\n\n        case 'code':\n          return (\n            <div key={index}>\n              <textarea\n                defaultValue={ReactHtmlParser(element.data.code)}\n                className=\"code\"\n                cols=\"90\"\n                rows=\"10\"\n              ></textarea>\n              <br />\n            </div>\n          );\n\n        case 'delimiter':\n          return <h1 key={index}> * * *</h1>;\n\n        default:\n          return <p key={index}>No Description.</p>;\n      }\n    });\n  }\n  return <div className=\"details\">{blocks}</div>;\n};\n\nexport default Description;\n","import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport Editor from './Editor';\nimport Api from './api';\nimport Description from './Description';\n\nconst Details = function (props) {\n  const [content, setContent] = useState(null);\n  const [isEditable, setEditable] = useState(false);\n  const {id} = useParams();\n\n  const updateContent = function (newContent) {\n    setContent(newContent);\n  };\n\n  const saveContent = async function () {\n    console.log('hi');\n    setEditable(false);\n    await Api.setContent(id, content);\n  };\n\n  useEffect(() => {\n    Api.getContent(id || 1).then((content) => {\n      setContent(() => content);\n    });\n  }, [id]);\n\n  return (\n    <div>\n      {isEditable ? (\n        <Editor onChange={updateContent} content={content} />\n      ) : (\n        <Description description={content} />\n      )}\n\n      <div className=\"button\">\n        <button disabled={isEditable} onClick={() => setEditable(true)}>\n          Edit\n        </button>\n        <button disabled={!isEditable} onClick={saveContent}>\n          Save\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Details;\n","import React, {useState, useEffect} from 'react';\nimport {\n  NavLink,\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Details from './Details';\n\nconst TitleNavbar = function (props) {\n  const [defaultTitle, setDefaultTitle] = useState(1);\n\n  useEffect(() => {\n    if (props.topics.length) {\n      console.log(props.topics[0].id);\n      setDefaultTitle(props.topics[0].id);\n    }\n  }, [props.topics]);\n\n  const titles = props.topics.map(({title, id}, index) => (\n    <NavLink\n      activeClassName=\"current\"\n      className=\"title\"\n      key={index}\n      to={`/${id}`}\n    >\n      {title}\n    </NavLink>\n  ));\n\n  return (\n    <Router>\n      <div className=\"navBar\">{titles}</div>\n      <Route exact path=\"/\">\n        <Redirect to={`/${defaultTitle}`} />\n      </Route>\n      <Route exact path=\"/:id\">\n        <Details />\n      </Route>\n    </Router>\n  );\n};\n\nexport default TitleNavbar;\n","import React, {useState} from 'react';\n\nconst Input = function (props) {\n  const [value, setValue] = useState('');\n\n  const handleChange = async ({target}) => {\n    await setValue(target.value);\n    props.onChange(target.value);\n  };\n\n  return (\n    <input\n      className=\"search-input\"\n      type=\"text\"\n      value={value}\n      onChange={handleChange}\n      required\n      placeholder=\"Search here...\"\n    />\n  );\n};\nInput.defaultProps = {value: ''};\nexport default Input;\n","import React, {useState} from 'react';\nimport '../popup.css';\nimport TitleNavbar from './TitleNavbar';\nimport Input from './Input.js';\n\nconst getSearchResults = function (topics, key) {\n  const searchResults = topics.filter(({title, content}) => {\n    if (title.includes(key)) {\n      return true;\n    }\n\n    const descriptions = content.blocks.map((block) => {\n      switch (block.type) {\n        case 'code':\n          return block.data.code;\n\n        case 'paragraph':\n          return block.data.text;\n\n        case 'header':\n          return block.data.text;\n\n        default:\n          return '';\n      }\n    });\n\n    const isMatching = descriptions.some(\n      (description) => description && description.includes(key)\n    );\n\n    return isMatching;\n  });\n  return searchResults;\n};\n\nconst SearchInput = function (props) {\n  const [filteredTopics, setFilteredTopics] = useState(null);\n\n  const handleChange = function (value) {\n    const searchResults = getSearchResults(props.topics, value);\n    setFilteredTopics(searchResults);\n  };\n\n  return (\n    <div>\n      <Input onChange={handleChange} />\n      {props.topics ? (\n        <TitleNavbar\n          topics={filteredTopics ? filteredTopics : props.topics}\n          onTitle={props.onTitle}\n        />\n      ) : (\n        <p>Add topics</p>\n      )}\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import React, {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport NewTitle from './NewTitle';\nimport Menubar from './Menubar';\nimport SearchInput from './SearchInput';\nimport Api from './api';\n\nconst Home = function (props) {\n  const [topics, setTopics] = useState([]);\n\n  const handleTitle = function (title) {\n    Api.addTitle(title).then(setTopics);\n  };\n\n  useEffect(() => {\n    Api.getTopics().then(setTopics);\n  }, []);\n\n  return (\n    <Router>\n      <Menubar onLogout={props.onLogout} topics={props.topics} />\n      <Switch>\n        <Route exact path=\"/newTitle\">\n          <NewTitle onTitle={handleTitle} />\n        </Route>\n        <Route path=\"/\">\n          <SearchInput topics={topics} onTitle={handleTitle} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\nexport default Home;\n","import React, {useEffect, useState} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Api from './api';\nimport Index from './Index';\nimport Home from './Home';\nimport UserContext from './UserContext';\n\nconst KnowledgeJunction = function () {\n  const [user, setUser] = useState(null);\n\n  const updateLoginStatus = () => Api.getUser().then(setUser);\n\n  useEffect(() => {\n    updateLoginStatus();\n  }, []);\n\n  return (\n    <Router>\n      <UserContext.Provider value={user}>\n        <Switch>\n          <Route path=\"/\">\n            {user ? <Home onLogout={updateLoginStatus} /> : <Index />}\n          </Route>\n        </Switch>\n      </UserContext.Provider>\n    </Router>\n  );\n};\n\nexport default KnowledgeJunction;\n","import React from 'react';\nimport KnowledgeJunction from './component/KnowledgeJunction';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <KnowledgeJunction />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const sendGetReq = function (url) {\n  return fetch(url).then((res) => res.json());\n};\n\nconst sendPostReq = function (url, body) {\n  return fetch(url, {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify(body),\n  }).then((response) => response.json());\n};\n\nconst getUser = () => sendGetReq('api/getUser').then(({user}) => user);\n\nconst getTopics = () => sendGetReq('api/topics').then((res) => res.topics);\n\nconst getContent = (id) =>\n  sendPostReq('api/content', {id}).then(({content}) => {\n    return content;\n  });\n\nconst addTitle = (title) =>\n  sendPostReq('api/addTitle', {title}).then(getTopics);\n\nconst logout = () => sendPostReq('api/logout');\n\nconst setContent = (id, content) =>\n  sendPostReq('api/setContent', {id, content});\n\nmodule.exports = {\n  sendGetReq,\n  sendPostReq,\n  getUser,\n  getTopics,\n  getContent,\n  addTitle,\n  logout,\n  setContent,\n};\n"],"sourceRoot":""}